# Use postgres/example user/password credentials
# sometimes need to call "truncate data.pr_data_stream_nodes;"
# $ docker-compose --profile install up -d
# $ docker-compose --profile run up -d
version: '3.1'
services:

  pega870-web-db:
    image: postgres:12-alpine
    networks:
      - pega870_net
    restart: unless-stopped

  pega870-cdh-db:
    image: postgres:12-alpine
    networks:
      - pega870_net
    restart: unless-stopped

  cassandra870-cdh:
    image: cassandra:3
    networks:
      - pega870_net

  pega870-web:
    image: ${PEGA_RUN_IMAGE}
    container_name: pega870-web
    depends_on:
      - "pega870-web-db"
    environment:
      - NODE_TYPE=BackgroundProcessing,WebUser,Search
      - NODE_TIER=web
      - JDBC_URL=jdbc:postgresql://pega870-web-db:5432/postgres
      - JDBC_DRIVER_URI
      - DB_TYPE
      - JDBC_CLASS
      - DB_USERNAME
      - DB_PASSWORD
      - RULES_SCHEMA
      - DATA_SCHEMA
      - CUSTOMERDATA_SCHEMA
      - ADMIN_PASSWORD
    networks:
      - pega870_net
    restart: unless-stopped

  pega870-cdh:
    image: ${PEGA_RUN_IMAGE}
    container_name: pega870-cdh
    depends_on:
      - "pega870-cdh-db"
    environment:
      - NODE_TYPE=ADM,Batch,RealTime,RTDG,Search,BackgroundProcessing
      - NODE_TIER=cdh
      - JDBC_URL=jdbc:postgresql://pega870-cdh-db:5432/postgres
      - CASSANDRA_CLUSTER=true
      - CASSANDRA_NODES=cassandra870-cdh
      - JDBC_DRIVER_URI
      - DB_TYPE
      - JDBC_CLASS
      - DB_USERNAME
      - DB_PASSWORD
      - RULES_SCHEMA
      - DATA_SCHEMA
      - CUSTOMERDATA_SCHEMA
      - ADMIN_PASSWORD
    networks:
      - pega870_net
    restart: unless-stopped

  pega870-web-install:
    image: ${PEGA_INSTALL_IMAGE}
    profiles:
      - install
    depends_on:
      - "pega870-web-db"
    environment:
      - ACTION=install
      - SYSTEM_NAME=pega870web
      - PRODUCTION_LEVEL=2
      - BYPASS_UDF_GENERATION=true
      - JDBC_URL=jdbc:postgresql://pega870-web-db:5432/postgres
      - JDBC_DRIVER_URI
      - DB_TYPE
      - JDBC_CLASS
      - DB_USERNAME
      - DB_PASSWORD
      - RULES_SCHEMA
      - DATA_SCHEMA
      - CUSTOMERDATA_SCHEMA
      - ADMIN_PASSWORD
    networks:
      - pega870_net

  pega870-cdh-install:
    image: ${PEGA_INSTALL_IMAGE}
    profiles:  
      - install
    depends_on:
      - "pega870-cdh-db"
    environment:
      - ACTION=install
      - SYSTEM_NAME=pega870cdh
      - PRODUCTION_LEVEL=2
      - BYPASS_UDF_GENERATION=true
      - JDBC_URL=jdbc:postgresql://pega870-cdh-db:5432/postgres
      - JDBC_DRIVER_URI
      - DB_TYPE
      - JDBC_CLASS
      - DB_USERNAME
      - DB_PASSWORD
      - RULES_SCHEMA
      - DATA_SCHEMA
      - CUSTOMERDATA_SCHEMA
      - ADMIN_PASSWORD
    networks:
      - pega870_net

networks:
  pega870_net:
    external:
      name: pega_common
